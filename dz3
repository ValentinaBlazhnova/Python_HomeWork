; Задайте список из нескольких чисел. Напишите программу, которая найдёт сумму элементов списка, стоящих на нечётной позиции.
; Пример:
; - [2, 3, 5, 9, 3] -> на нечётных позициях элементы 3 и 9, ответ: 12

def summ_my_list(my_list):
    summ = 0
    for i in range(len(my_list)):
        if i % 2 != 0:
            summ += my_list[i]
    return summ

from random import randint
my_list = []
for i in range(5): #список из 5 элементов. 
    my_list.append(randint(0, 10)) #Каждый элемент любое число от 0 до 10.

print(my_list)
print(f'на нечётных позициях элементы {my_list[1]} и {my_list[3]}, ответ: {summ_my_list(my_list)}')


; Напишите программу, которая найдёт произведение пар чисел списка. Парой считаем первый и последний элемент, второй и предпоследний и т.д.
; Пример:
; - [2, 3, 4, 5, 6] => [12, 15, 16];
; - [2, 3, 5, 6] => [12, 15]

def mult_list(my_list): #Функция заполнения нового списка элементами произведений
    for i in range(len(my_list)):
        mult = my_list[i] * my_list[len(my_list) - 1 - i]
        if i < len(my_list)/2:
            new_list.append(mult)
    return new_list

from random import randint #cоздаем первоначальный список
my_list = []
for i in range(5): #список из 5 элементов. 
    my_list.append(randint(0, 10)) #Каждый элемент любое число от 0 до 10.`
print(my_list)

new_list = [] #Пустой список для произведений
print(mult_list(my_list))


; Задайте список из вещественных чисел. Напишите программу, которая найдёт разницу между максимальным и минимальным значением дробной части элементов.
; Пример:
; - [1.1, 1.2, 3.1, 5, 10.01] => 0.19

a = [1.1, 1.2, 3.1, 5, 10.01]

def max_min(a):
    for i in range(len(a)):
        a[i] = (a[i] % 1)
        result = round(max(a) - min(a),3)
    return f'Ответ: {result}'

print(max_min(a))

; Вариант 2
from math import *
a = [1.1, 1.2, 3.1, 5, 10.01]

for i in range(len(a)):
    a[i] = a[i] - trunc(a[i]) # trunc откидывает дробную часть
print(round(max(a) - min(a),3))


; Напишите программу, которая будет преобразовывать десятичное число в двоичное.
; Пример:
; - 45 -> 101101
; - 3 -> 11
; - 2 -> 10

def new_number(n):
    b = ''
    while n > 0:
        b = str(n % 2) + b #Записывает b в конец, если b += str(b % 2), то нужен разворот массива b[::-1]
        n = n // 2 #// - возвращает целочисленный результат деления, отбрасывая дробную часть
    return b
    
n = int(input('Введите число: '))
print(new_number(n))


; Задайте число. Составьте список чисел Фибоначчи, в том числе для отрицательных индексов.
; Пример:
; - для k = 8 список будет выглядеть так: [-21 ,13, -8, 5, −3, 2, −1, 1, 0, 1, 1, 2, 3, 5, 8, 13, 21] [Негафибоначчи]

n = int(input('Введите число n -> '))

def fib(n): #для положительных
    l = [0,1,1]
    result = 1
    for i in range(2, n): 
      result = l[-1] + l[-2] 
      l.append(result)  
    return l

def minus_fib(n):
    for i in range(len(n)):
        if i % 2 == 0: 
            n[i] = - n[i] 
    return n

fib1 = minus_fib(fib(n)) 
result = fib1[::-1] + fib(n)
result.remove(0) #иначе выводит два 0, т к изначально указано l = [0,1,1], remove удаляет первое значение
print(result)